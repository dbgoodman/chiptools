adj_read_contrib_per_bin <- adj_flow_read_pcts / rowSums(adj_flow_read_pcts)
dim(adj_read_contrib_per_bin)
t(adj_read_contrib_per_bin[,1:2])
adj_flow_read_pcts[,1:2]
adj_read_contrib_per_bin <- adj_flow_read_pcts / colSums(adj_flow_read_pcts)
adj_read_contrib_per_bin[,1:12]
t(adj_read_contrib_per_bin[,1:2])
t(adj_read_contrib_per_bin[,1:2] * binmeans)
t(adj_read_contrib_per_bin[,1:2] * log(binmeans))
t(colSums(adj_read_contrib_per_bin[,1:2] * log(binmeans)))
colSums(adj_read_contrib_per_bin[,1:2] * log(binmeans))
log(binmeans)
t(adj_read_contrib_per_bin[,1:2])
rowSums(t(adj_read_contrib_per_bin[,1:2]))
adj_flow_read_pcts[,1:2]
t(adj_flow_read_pcts[,1:2])
t(adj_flow_read_pcts[,1:2] / colSums(adj_flow_read_pcts))
adj_flow_read_pcts[,1:2] / colSums(adj_flow_read_pcts[,1:2])
t(adj_flow_read_pcts[,1:2] / colSums(adj_flow_read_pcts[,1:2]))
adj_read_contrib_per_bin <- adj_flow_read_pcts / colSums(adj_flow_read_pcts)
adj_read_contrib_per_bin[,1:2]
colSums(adj_flow_read_pcts)
adj_read_contrib_per_bin <- adj_flow_read_pcts / t(colSums(adj_flow_read_pcts))
colSums(adj_flow_read_pcts[,1:2])
adj_flow_read_pcts[,1:2]
adj_flow_read_pcts[,1:2] / colSums(adj_flow_read_pcts[,1:2])
colSums(adj_flow_read_pcts[,1:2] / colSums(adj_flow_read_pcts[,1:2]))
adj_flow_read_pcts[,1:2] / colSums(adj_flow_read_pcts[,1:2])
t(adj_flow_read_pcts[,1:2]) / colSums(adj_flow_read_pcts[,1:2])
rowSums(t(adj_flow_read_pcts[,1:2]) / colSums(adj_flow_read_pcts[,1:2]))
adj_flow_read_pcts[,1:2] / t(colSums(adj_flow_read_pcts[,1:2]))
adj_read_contrib_per_bin <- t(t(adj_flow_read_pcts) / colSums(adj_flow_read_pcts))
adj_read_contrib_per_bin[,1:2]
colSums(adj_read_contrib_per_bin[,1:2])
adj_read_contrib_per_bin[,1:2] * binmeans
adj_read_contrib_per_bin[,1:2] * log(binmeans)
colSums(adj_read_contrib_per_bin[,1:2] * log(binmeans))
exp(colSums(adj_read_contrib_per_bin[,1:2] * log(binmeans)))
binmeans
exp(colSums(adj_read_contrib_per_bin[,1:10] * log(binmeans)))
binmeans
adj_score_contrib_per_bin <- adj_read_contrib_per_bin * binmeans
adj_score_contrib_per_bin[,1:5]
colSums(adj_score_contrib_per_bin[,1:5])
t(colSums(adj_score_contrib_per_bin[,1:5]))
adj_score_contrib_per_bin <- adj_read_contrib_per_bin * binmeans#
exp_adj_score_contrib_per_bin <- adj_read_contrib_per_bin * log(binmeans)#
#
#
ngs_avg_clean$new_score1 <- t(colSums(adj_score_contrib_per_bin))#
ngs_avg_clean$new_score2 <- t(exp(colSums(exp_adj_score_contrib_per_bin)))
dim(t(colSums(adj_score_contrib_per_bin)))
dim(ngs_avg_clean)
adj_score_contrib_per_bin <- adj_read_contrib_per_bin * binmeans#
exp_adj_score_contrib_per_bin <- adj_read_contrib_per_bin * log(binmeans)#
#
#
ngs_avg_clean$new_score1 <- colSums(adj_score_contrib_per_bin)#
ngs_avg_clean$new_score2 <- exp(colSums(exp_adj_score_contrib_per_bin))
ngs_avg_clean[1:20,c(paste('bin',c(1:12),sep='.'),'score','new_score1','new_score2')]
ngs_avg_clean[500:600,c(paste('bin',c(1:12),sep='.'),'score','new_score1','new_score2')]
ngs_avg_clean$Gene <- reorder(ngs_avg_clean$Gene, #
    ngs_avg_clean$score, median)
ggplot(ngs_avg_clean, aes(x = Gene, y = Peptide)) + #
    geom_tile(aes(fill = rescale( log10(new_score2), c(-1, 1) ))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         legend.position = "none",axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen") +#
    facet_grid(RBS ~ Promoter)
library(reshape2)#
library(plotrix)#
library(grid)#
library(plyr)#
library(ggplot2)
ggplot(ngs_avg_clean, aes(x = Gene, y = Peptide)) + #
    geom_tile(aes(fill = rescale( log10(new_score2), c(-1, 1) ))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         legend.position = "none",axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen") +#
    facet_grid(RBS ~ Promoter)
#relative scores#
get_wt_score <- function (i) {#
    wt_score <- ngs_avg_clean$score[#
        ngs_avg_clean$Gene == ngs_avg_clean$Gene[i] & #
        ngs_avg_clean$Promoter == ngs_avg_clean$Promoter[i] & #
        ngs_avg_clean$RBS == ngs_avg_clean$RBS[i] & #
        ngs_avg_clean$Peptide == 'WT']#
    ifelse(length(wt_score) > 0, wt_score, NA)#
}#
#
ngs_wt_scores <-vapply(c(1:dim(ngs_avg_clean)[1]),get_wt_score, 0)
ngs_avg_clean$rel_score <- log10(ngs_avg_clean$score / ngs_wt_scores)
ggplot(ngs_avg_clean, aes(x = Gene, y = Peptide)) + #
    geom_tile(aes(fill = rel_score)) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
        axis.ticks = theme_blank()) +#
    scale_fill_gradient2(#
        name="% Expr rel to WT\nPeptide for same\nGene+Promo+RBS",#
        low="darkred", mid="yellow", high="darkgreen", #
        midpoint=0, limits=c(-2,+2), breaks=c(-2,-1,0,1,2), #
        labels=c('0.01x','0.1x','1x','10x','100x')) +#
    facet_grid(RBS ~ Promoter) + #
    opts(title="% Expression Relative To WT Peptide for\nSame Gene + Promoter + RBS") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold")) #
ggsave("203_hiseq-rbs_promo_facet_grid_relative.pdf",width=10,height=10)
ggplot(ngs_avg_clean, aes(x = Promoter, y = Peptide)) + #
    geom_tile(aes(fill = rel_score)) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
        axis.ticks = theme_blank()) +#
    scale_fill_gradient2(#
        name="% Expr rel to WT\nPeptide for same\nGene+Promo+RBS",#
        low="darkred", mid="yellow", high="darkgreen", #
        midpoint=0, limits=c(-2,+2), breaks=c(-2,-1,0,1,2), #
        labels=c('0.01x','0.1x','1x','10x','100x')) +#
    facet_grid(RBS ~ Gene) + #
    opts(title="% Expression Relative To WT Peptide for\nSame Gene + Promoter + RBS") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold"))
ggsave("203_hiseq-rbs_gene_facet_grid_relative.pdf",width=30,height=10)
ngs_avg_clean$rel_score <- log10(ngs_avg_clean$new_score1 / ngs_wt_scores)
#relative score#
ggplot(ngs_avg_clean, aes(x = Gene, y = Peptide)) + #
    geom_tile(aes(fill = rel_score)) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
        axis.ticks = theme_blank()) +#
    scale_fill_gradient2(#
        name="% Expr rel to WT\nPeptide for same\nGene+Promo+RBS",#
        low="darkred", mid="yellow", high="darkgreen", #
        midpoint=0, limits=c(-2,+2), breaks=c(-2,-1,0,1,2), #
        labels=c('0.01x','0.1x','1x','10x','100x')) +#
    facet_grid(RBS ~ Promoter) + #
    opts(title="% Expression Relative To WT Peptide for\nSame Gene + Promoter + RBS") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold")) #
ggsave("203_hiseq-rbs_promo_facet_grid_relative.pdf",width=10,height=10)
get_wt_score <- function (i) {#
    wt_score <- ngs_avg_clean$new_score1[#
        ngs_avg_clean$Gene == ngs_avg_clean$Gene[i] & #
        ngs_avg_clean$Promoter == ngs_avg_clean$Promoter[i] & #
        ngs_avg_clean$RBS == ngs_avg_clean$RBS[i] & #
        ngs_avg_clean$Peptide == 'WT']#
    ifelse(length(wt_score) > 0, wt_score, NA)#
}
get_wt_score <- function (i) {#
    wt_score <- ngs_avg_clean$new_score1[#
        ngs_avg_clean$Gene == ngs_avg_clean$Gene[i] & #
        ngs_avg_clean$Promoter == ngs_avg_clean$Promoter[i] & #
        ngs_avg_clean$RBS == ngs_avg_clean$RBS[i] & #
        ngs_avg_clean$Peptide == 'WT']#
    ifelse(length(wt_score) > 0, wt_score, NA)#
}#
#
ngs_wt_scores <-vapply(c(1:dim(ngs_avg_clean)[1]),get_wt_score, 0)
ngs_avg_clean$rel_score <- log10(ngs_avg_clean$new_score1 / ngs_wt_scores)
ggplot(ngs_avg_clean, aes(x = Gene, y = Peptide)) + #
    geom_tile(aes(fill = rel_score)) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
        axis.ticks = theme_blank()) +#
    scale_fill_gradient2(#
        name="% Expr rel to WT\nPeptide for same\nGene+Promo+RBS",#
        low="darkred", mid="yellow", high="darkgreen", #
        midpoint=0, limits=c(-2,+2), breaks=c(-2,-1,0,1,2), #
        labels=c('0.01x','0.1x','1x','10x','100x')) +#
    facet_grid(RBS ~ Promoter) + #
    opts(title="% Expression Relative To WT Peptide for\nSame Gene + Promoter + RBS") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold")) #
ggsave("203_hiseq-rbs_promo_facet_grid_relative-newscores.pdf",width=20,height=10)
ggplot(ngs_avg_clean, aes(x = Promoter, y = Peptide)) + #
    geom_tile(aes(fill = rel_score)) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
        axis.ticks = theme_blank()) +#
    scale_fill_gradient2(#
        name="% Expr rel to WT\nPeptide for same\nGene+Promo+RBS",#
        low="darkred", mid="yellow", high="darkgreen", #
        midpoint=0, limits=c(-2,+2), breaks=c(-2,-1,0,1,2), #
        labels=c('0.01x','0.1x','1x','10x','100x')) +#
    facet_grid(RBS ~ Gene) + #
    opts(title="% Expression Relative To WT Peptide for\nSame Gene + Promoter + RBS") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold")) #
ggsave("203_hiseq-rbs_gene_facet_grid_relative.pdf",width=30,height=10)
?function
()
!
?
''
get_new_scores <- function(ngs_df, bin_pcts, bin_breaks) {#
    bin_sums <-colsums(ngs_df[,paste('bin',c(1:12),sep='.')])#
    read_denom <- (means202/100) * bin_sums#
    nrecords <- dim(ngs_df)[1]#
    bin_means <- (bin_breaks[2:length(bin_breaks)] - #
        bin_breaks[1:length(bin_breaks)-1]) / 2 + #
        bin_breaks[1:length(bin_breaks)-1]#
    read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums#
    flow_pcts <- read_pcts * bin_means#
    contrib_per_bin <- t(t(adj_flow_pcts) / #
        colSums(adj_flow_pcts))#
    return( exp( colSums(contrib_per_bin * log(bin_means) ) ) )#
}
get_new_scores(avg_ngs_clean, bin)
bin_pcts202 <- c(22.3, 5.466666667, 7.533333333, 8.566666667, 8.4, #
    8.133333333, 7.766666667, 7.433333333, 6.966666667, 6.066666667, #
    4.733333333, 6.533333333)#
bin_pcts203 <- c(37.93333333, 9.266666667, 10.86666667, 10.16666667, #
    7.666666667, 5.8, 4.533333333, 3.566666667, 2.833333333, 2.266666667, #
    1.733333333, 3.2)#
bin_breaks <- c(0,1250, 2027, 3287, 5331, 8645, 14019, 22735, 36870, #
               59791, 96963, 157243, 255000)
get_new_scores(avg_ngs_clean, bin_pcts203, bin_breaks)
get_new_scores <- function(ngs_df, bin_pcts, bin_breaks) {#
    bin_sums <-colSums(ngs_df[,paste('bin',c(1:12),sep='.')])#
    read_denom <- (means202/100) * bin_sums#
    nrecords <- dim(ngs_df)[1]#
    bin_means <- (bin_breaks[2:length(bin_breaks)] - #
        bin_breaks[1:length(bin_breaks)-1]) / 2 + #
        bin_breaks[1:length(bin_breaks)-1]#
    read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums#
    flow_pcts <- read_pcts * bin_means#
    contrib_per_bin <- t(t(adj_flow_pcts) / #
        colSums(adj_flow_pcts))#
    return( exp( colSums(contrib_per_bin * log(bin_means) ) ) )#
}
get_new_scores(avg_ngs_clean, bin_pcts203, bin_breaks)
get_new_scores(ngs_avg_clean, bin_pcts203, bin_breaks)
get_new_scores <- function(ngs_df, bin_pcts, bin_breaks) {#
    bin_sums <-colSums(ngs_df[,paste('bin',c(1:12),sep='.')])#
    read_denom <- (means202/100) * bin_sums#
    nrecords <- dim(ngs_df)[1]#
    bin_means <- (bin_breaks[2:length(bin_breaks)] - #
        bin_breaks[1:length(bin_breaks)-1]) / 2 + #
        bin_breaks[1:length(bin_breaks)-1]#
    read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums#
    flow_pcts <- read_pcts * bin_means#
    contrib_per_bin <- t(t(flow_pcts) / #
        colSums(flow_pcts))#
    return( exp( colSums(contrib_per_bin * log(bin_means) ) ) )#
}
get_new_scores(ngs_avg_clean, bin_pcts203, bin_breaks)
ngs_avg_clean$new_score2 - get_new_scores(ngs_avg_clean, bin_pcts203, bin_breaks)
get_new_scores(ngs_avg_clean, bin_pcts203, bin_breaks)
ngs_avg_clean$new_score3 <- get_new_scores(ngs_avg_clean, bin_pcts203, bin_breaks)
ngs_avg_clean[,c('new_score2','new_score3')]
ngs_df <- ngs_avg_clean
bin_sums <-colSums(ngs_df[,paste('bin',c(1:12),sep='.')])
bin_means
    bin_means <- (bin_breaks[2:length(bin_breaks)] - #
        bin_breaks[1:length(bin_breaks)-1]) / 2 + #
        bin_breaks[1:length(bin_breaks)-1]
read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums
read_pcts
flow_pcts <- read_pcts * bin_means
flow_pcts
flow_pcts[,1:2]
ngs_df[1:2,paste('bin',c(1:12),sep='.')]
ngs_df[,paste('bin',c(1:12),sep='.')
ngs_df[,paste('bin',c(1:12),sep='.')]
ngs_df[1:2,paste('bin',c(1:12),sep='.')]
read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums
read_pcts[,1:2]
    contrib_per_bin <- t(t(read_pcts) / #
        colSums(read_pcts))
    contrib_per_bin[,1:2]
colSums(contrib_per_bin[,1:2])
get_new_scores <- function(ngs_df, bin_pcts, bin_breaks) {#
    bin_sums <-colSums(ngs_df[,paste('bin',c(1:12),sep='.')])#
    bin_means <- (bin_breaks[2:length(bin_breaks)] - #
        bin_breaks[1:length(bin_breaks)-1]) / 2 + #
        bin_breaks[1:length(bin_breaks)-1]#
    read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums#
    contrib_per_bin <- t(t(read_pcts) / #
        colSums(read_pcts))#
    return( exp( colSums(contrib_per_bin * log(bin_means) ) ) )#
}
ngs_avg_clean$new_score3 <- get_new_scores(ngs_avg_clean, bin_pcts203, bin_breaks)
ngs_avg_clean[,c('new_score2','new_score3')]
ngs_avg_clean$new_score3 <- get_new_scores(ngs_avg_clean, bin_pcts202, bin_breaks)
ngs_avg_clean[,c('new_score2','new_score3')]
ngs_avg_clean[1,]
    bin_means <- (bin_breaks[2:length(bin_breaks)] - #
        bin_breaks[1:length(bin_breaks)-1]) / 2 + #
        bin_breaks[1:length(bin_breaks)-1]
bin_means
read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums
read_pcts
read_pcts[1:2,]
read_pcts[,1:2]
t(ngs_avg_clean[1:2,])
t(ngs_avg_clean[1:2,paste('bin',c(1:12),sep='.')])
read_pcts[,1:2]
contrib_per_bin[,1:2]
ontrib_per_bin[,1:2] * log(bin_means)
contrib_per_bin[,1:2] * log(bin_means)
colSums(contrib_per_bin[,1:2] * log(bin_means))
exp(colSums(contrib_per_bin[,1:2] * log(bin_means)))
get_new_scores <- function(ngs_df, bin_pcts, bin_breaks) {#
    bin_sums <-colSums(ngs_df[,paste('bin',c(1:12),sep='.')])#
    bin_means <- (bin_breaks[2:length(bin_breaks)] - #
        bin_breaks[1:length(bin_breaks)-1]) / 2 + #
        bin_breaks[1:length(bin_breaks)-1]#
    read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums#
    contrib_per_bin <- t(t(read_pcts) / #
        colSums(read_pcts))#
    return( exp( colSums(contrib_per_bin * log(bin_means) ) ) )#
}
ngs_avg_clean$new_score3 <- get_new_scores(ngs_avg_clean, bin_pcts203, bin_breaks)
ngs_avg_clean[,c('new_score3','new_score2')]
ngs_avg_clean[,c('new_score3','new_score')]
colnames(ngs_avg_clean)
ngs_avg_clean[,c('new_score3','new_scores')]
load_ustats <- function(ustats_file) {#
	df_ngs <- as.data.frame(read.csv(ustats_file,header=TRUE,sep='\t'))#
	#fix lev (unsure why this is broken...)#
	df_ngs$lev <- df_ngs$mismatch + df_ngs$ins + df_ngs$del#
	#
    #factorize lev distances#
    df_ngs$lev_f <- factor((as.integer(df_ngs$lev > 0) + #
        as.integer(df_ngs$lev > 1) + as.integer(df_ngs$lev > 5)#
        + as.integer(df_ngs$lev > 10)), c(0:5),#
        labels=c('perfect','single','near','distant','v.distant','no match'),#
        exclude=NULL, ordered = TRUE#
    #
    return(df_ngs)#
    #
}#
#
load_ustats202 <- function(ustats_file, perfect_only= TRUE, n_reads= 10) {#
    df_ngs <- load_ustats(ustats_file)#
    #
    if (perfect_only) { #
        df_ngs <- subset(df_ngs, #
            (counts > n_reads & lev == 0 & !(is.na(df_ngs$target))))#
    #
    #split target into promoter and rbs#
    sp = strsplit(as.character(ngs_avg$target), '--')#
    df_ngs$Promoter <- sapply(sp, "[", 1)#
    df_ngs$RBS <- sapply(sp, "[", 2)#
    df_ngs$Leader <- sapply(sp, "[", 3)#
    #
    return(df_ngs)#
}#
#
load_ustats203 <- function(ustats_file, perfect_only= TRUE) {#
    df_ngs <- load_ustats(ustats_file)#
    #
    if (perfect_only) { #
     df_ngs <- subset(df_ngs, #
         (counts >= n_reads & lev == 0 & #
             !(is.na(df_ngs$target)) & #
             !(df_ngs$RBS == '')))#
     }#
    #
    #split target into Promoter, RBS, Leader#
    sp = strsplit(as.character(df_ngs$target), '-')#
    df_ngs$Promoter <- sapply(sp, "[", 1)#
    df_ngs$RBS <- sapply(sp, "[", 2)#
    df_ngs$Leader <- sapply(sp, "[", 3)#
    #
    #split Leader into peptide, RBS#
    df_ngs$Gene <- as.factor(df_ngs$RBS)#
    df_ngs$RBS <- rep(NA,dim(df_ngs)[1]) #
    df_ngs$Peptide <- rep(NA,dim(df_ngs)[1]) #
#
#
    df_ngs$RBS[which(df_ngs$Leader %in% c(1,5,9,13:22))] <- 'WT'#
    df_ngs$RBS[which(df_ngs$Leader %in% c(2,6,10,23:32))] <- 'BB0030'#
    df_ngs$RBS[which(df_ngs$Leader %in% c(3,7,11,33:42))] <- 'BB0032'#
    df_ngs$RBS[which(df_ngs$Leader %in% c(4,8,12,43:52))] <- 'BB0034'#
    df_ngs$RBS <- factor(df_ngs$RBS, rev(c('BB0030','BB0034','BB0032','WT')))#
#
    df_ngs$Peptide <- (as.integer(df_ngs$Leader) -3) %% 10 #
    df_ngs$Peptide[which(df_ngs$Leader %in% c(1:4))] <- 'WT'#
    df_ngs$Peptide[which(df_ngs$Leader %in% c(5:8))] <- 'Min Rare'#
    df_ngs$Peptide[which(df_ngs$Leader %in% c(9:12))] <- 'Max Rare'#
#
    df_ngs$Peptide <- factor(ngs_avg_clean$Peptide, #
        rev(c('WT','Min Rare','Max Rare',0:9)), #
        rev(c('WT','Min Rare','Max Rare',paste('∆G',c(1:10),sep=' '))))#
    #
    return(df_ngs)#
}
}
load_ustats <- function(ustats_file) {#
	df_ngs <- as.data.frame(read.csv(ustats_file,header=TRUE,sep='\t'))#
	#fix lev (unsure why this is broken...)#
	df_ngs$lev <- df_ngs$mismatch + df_ngs$ins + df_ngs$del#
	#
    #factorize lev distances#
    df_ngs$lev_f <- factor((as.integer(df_ngs$lev > 0) + #
        as.integer(df_ngs$lev > 1) + as.integer(df_ngs$lev > 5)#
        + as.integer(df_ngs$lev > 10)), c(0:5),#
        labels=c('perfect','single','near','distant','v.distant','no match'),#
        exclude=NULL, ordered = TRUE#
    #
    return(df_ngs)#
    #
}#
#
load_ustats202 <- function(ustats_file, perfect_only= TRUE, n_reads= 10) {#
    df_ngs <- load_ustats(ustats_file)#
    #
    if (perfect_only) { #
        df_ngs <- subset(df_ngs, #
            (counts > n_reads & lev == 0 & !(is.na(df_ngs$target))))#
    }#
    #
    #split target into promoter and rbs#
    sp = strsplit(as.character(ngs_avg$target), '--')#
    df_ngs$Promoter <- sapply(sp, "[", 1)#
    df_ngs$RBS <- sapply(sp, "[", 2)#
    df_ngs$Leader <- sapply(sp, "[", 3)#
    #
    return(df_ngs)#
}#
#
load_ustats203 <- function(ustats_file, perfect_only= TRUE) {#
    df_ngs <- load_ustats(ustats_file)#
    #
    if (perfect_only) { #
     df_ngs <- subset(df_ngs, #
         (counts >= n_reads & lev == 0 & #
             !(is.na(df_ngs$target)) & #
             !(df_ngs$RBS == '')))#
     }#
    #
    #split target into Promoter, RBS, Leader#
    sp = strsplit(as.character(df_ngs$target), '-')#
    df_ngs$Promoter <- sapply(sp, "[", 1)#
    df_ngs$RBS <- sapply(sp, "[", 2)#
    df_ngs$Leader <- sapply(sp, "[", 3)#
    #
    #split Leader into peptide, RBS#
    df_ngs$Gene <- as.factor(df_ngs$RBS)#
    df_ngs$RBS <- rep(NA,dim(df_ngs)[1]) #
    df_ngs$Peptide <- rep(NA,dim(df_ngs)[1]) #
#
#
    df_ngs$RBS[which(df_ngs$Leader %in% c(1,5,9,13:22))] <- 'WT'#
    df_ngs$RBS[which(df_ngs$Leader %in% c(2,6,10,23:32))] <- 'BB0030'#
    df_ngs$RBS[which(df_ngs$Leader %in% c(3,7,11,33:42))] <- 'BB0032'#
    df_ngs$RBS[which(df_ngs$Leader %in% c(4,8,12,43:52))] <- 'BB0034'#
    df_ngs$RBS <- factor(df_ngs$RBS, rev(c('BB0030','BB0034','BB0032','WT')))#
#
    df_ngs$Peptide <- (as.integer(df_ngs$Leader) -3) %% 10 #
    df_ngs$Peptide[which(df_ngs$Leader %in% c(1:4))] <- 'WT'#
    df_ngs$Peptide[which(df_ngs$Leader %in% c(5:8))] <- 'Min Rare'#
    df_ngs$Peptide[which(df_ngs$Leader %in% c(9:12))] <- 'Max Rare'#
#
    df_ngs$Peptide <- factor(ngs_avg_clean$Peptide, #
        rev(c('WT','Min Rare','Max Rare',0:9)), #
        rev(c('WT','Min Rare','Max Rare',paste('∆G',c(1:10),sep=' '))))#
    #
    return(df_ngs)#
}
csv_dir    <- '/Users/dbgoodman/Dropbox/ecre/ngs/'#
min10_202  <- paste(csv_dir,'202_hiseq/202_hiseq_min10.ustats', sep='')#
min10_203  <- paste(csv_dir,'203_hiseq/203_hiseq_min10.ustats', sep='')#
min2_202m  <- '/Users/dbgoodman/Dropbox/ecre/ngs/202_bins/202_bins.ustats'
ngs_202h  <- load_ustats202(min10_202, perfect_only= TRUE)
load_ustats <- function(ustats_file) {#
	df_ngs <- as.data.frame(read.csv(ustats_file,header=TRUE,sep='\t'))#
	#fix lev (unsure why this is broken...)#
	df_ngs$lev <- df_ngs$mismatch + df_ngs$ins + df_ngs$del#
	#
    #factorize lev distances#
    df_ngs$lev_f <- factor((as.integer(df_ngs$lev > 0) + #
        as.integer(df_ngs$lev > 1) + as.integer(df_ngs$lev > 5)#
        + as.integer(df_ngs$lev > 10)), c(0:5),#
        labels=c('perfect','single','near','distant','v.distant','no match'),#
        exclude=NULL, ordered = TRUE#
    #
    return(df_ngs)#
    #
}
load_ustats <- function(ustats_file) {#
	df_ngs <- as.data.frame(read.csv(ustats_file,header=TRUE,sep='\t'))#
	df_ngs$lev <- df_ngs$mismatch + df_ngs$ins + df_ngs$del#
	#
    #factorize lev distances#
    df_ngs$lev_f <- factor((as.integer(df_ngs$lev > 0) + #
        as.integer(df_ngs$lev > 1) + as.integer(df_ngs$lev > 5)#
        + as.integer(df_ngs$lev > 10)), c(0:5),#
        labels=c('perfect','single','near','distant','v.distant','no match'),#
        exclude=NULL, ordered = TRUE#
    return(df_ngs)#
}
load_ustats <- function(ustats_file) {#
	df_ngs <- as.data.frame(read.csv(ustats_file,header=TRUE,sep='\t'))#
	df_ngs$lev <- df_ngs$mismatch + df_ngs$ins + df_ngs$del#
	#
    #factorize lev distances#
    df_ngs$lev_f <- factor((as.integer(df_ngs$lev > 0) + #
        as.integer(df_ngs$lev > 1) + as.integer(df_ngs$lev > 5)#
        + as.integer(df_ngs$lev > 10)), c(0:5),#
        labels=c('perfect','single','near','distant','v.distant','no match'),#
        exclude=NULL, ordered = TRUE)#
    return(df_ngs)#
}
ngs_202h  <- load_ustats202(min10_202, perfect_only= TRUE)
ngs_203h  <- load_ustats203(min10_203, perfect_only= TRUE)#
ngs_202m <- load_ustats202(min2_202m, perfect_only= TRUE)
ngs_203h[1:5,]
load_ustats203 <- function(ustats_file, perfect_only= TRUE, n_reads= 10) {#
    df_ngs <- load_ustats(ustats_file)#
    #
    if (perfect_only) { #
     df_ngs <- subset(df_ngs, #
         (counts >= n_reads & lev == 0 & #
             !(is.na(df_ngs$target)) & #
             !(df_ngs$RBS == '')))#
     }#
    #
    #split target into Promoter, RBS, Leader#
    sp = strsplit(as.character(df_ngs$target), '-')#
    df_ngs$Promoter <- sapply(sp, "[", 1)#
    df_ngs$RBS <- sapply(sp, "[", 2)#
    df_ngs$Leader <- sapply(sp, "[", 3)#
    #
    #split Leader into peptide, RBS#
    df_ngs$Gene <- as.factor(df_ngs$RBS)#
    df_ngs$RBS <- rep(NA,dim(df_ngs)[1]) #
    df_ngs$Peptide <- rep(NA,dim(df_ngs)[1]) #
#
#
    df_ngs$RBS[which(df_ngs$Leader %in% c(1,5,9,13:22))] <- 'WT'#
    df_ngs$RBS[which(df_ngs$Leader %in% c(2,6,10,23:32))] <- 'BB0030'#
    df_ngs$RBS[which(df_ngs$Leader %in% c(3,7,11,33:42))] <- 'BB0032'#
    df_ngs$RBS[which(df_ngs$Leader %in% c(4,8,12,43:52))] <- 'BB0034'#
    df_ngs$RBS <- factor(df_ngs$RBS, rev(c('BB0030','BB0034','BB0032','WT')))#
#
    df_ngs$Peptide <- (as.integer(df_ngs$Leader) -3) %% 10 #
    df_ngs$Peptide[which(df_ngs$Leader %in% c(1:4))] <- 'WT'#
    df_ngs$Peptide[which(df_ngs$Leader %in% c(5:8))] <- 'Min Rare'#
    df_ngs$Peptide[which(df_ngs$Leader %in% c(9:12))] <- 'Max Rare'#
#
    df_ngs$Peptide <- factor(ngs_avg_clean$Peptide, #
        rev(c('WT','Min Rare','Max Rare',0:9)), #
        rev(c('WT','Min Rare','Max Rare',paste('∆G',c(1:10),sep=' '))))#
    #
    return(df_ngs)#
}
ngs_203h[1:5,]
ngs_203h  <- load_ustats203(min10_203, perfect_only= TRUE)
df_ngs <- load_ustats(ustats_file)
df_ngs <- load_ustats(min10_203)
    if (perfect_only) { #
     df_ngs <- subset(df_ngs, #
         (counts >= n_reads & lev == 0 & #
             !(is.na(df_ngs$target)) & #
             !(df_ngs$RBS == '')))#
     }
perfect_only=TRUE
    if (perfect_only) { #
     df_ngs <- subset(df_ngs, #
         (counts >= n_reads & lev == 0 & #
             !(is.na(df_ngs$target)) & #
             !(df_ngs$RBS == '')))#
     }
n_reads=10
    if (perfect_only) { #
     df_ngs <- subset(df_ngs, #
         (counts >= n_reads & lev == 0 & #
             !(is.na(df_ngs$target)) & #
             !(df_ngs$RBS == '')))#
     }
    sp = strsplit(as.character(df_ngs$target), '-')#
    df_ngs$Promoter <- sapply(sp, "[", 1)#
    df_ngs$RBS <- sapply(sp, "[", 2)#
    df_ngs$Leader <- sapply(sp, "[", 3)
    df_ngs$Gene <- as.factor(df_ngs$RBS)#
    df_ngs$RBS <- rep(NA,dim(df_ngs)[1]) #
    df_ngs$Peptide <- rep(NA,dim(df_ngs)[1])
df_ngs$RBS
df_ngs
df_ngs <- load_ustats(min10_203)
df_ngs$RBS
df_ngs
df_ngs[1:10,]
subset(df_ngs, #
         (counts >= n_reads & lev == 0 & #
             !(is.na(df_ngs$target)))
fasdfasdf)
subset(df_ngs, #
         (counts >= n_reads & lev == 0 & #
             !(is.na(df_ngs$target))))[1:10,]
?strsplit
load_ustats203 <- function(ustats_file, perfect_only= TRUE, n_reads= 10,#
        controls= FALSE) {#
    df_ngs <- load_ustats(ustats_file)#
    #
    if (perfect_only) { #
        df_ngs <-subset(df_ngs, #
            (counts >= n_reads & lev == 0 & !(is.na(df_ngs$target))))#
     }#
    #
    if (controls) {#
        #split target into promoter and rbs#
        sp = strsplit(as.character(ngs_avg$target), '--')#
        #
        df_ngs$Promoter <- sapply(sp, "[", 1)#
        df_ngs$RBS <- sapply(sp, "[", 2)  #
        #
    } else {#
        #split target into Promoter, RBS, Leader#
        sp = strsplit(as.character(df_ngs$target), '-')#
        #
        df_ngs$Promoter <- sapply(sp, "[", 1)#
        df_ngs$RBS <- sapply(sp, "[", 2)#
        df_ngs$Leader <- sapply(sp, "[", 3)#
        df_ngs <- subset(df_ngs, !(df_ngs$RBS == ''))#
    #
        #split Leader into peptide, RBS#
        df_ngs$Gene <- as.factor(df_ngs$RBS)#
        df_ngs$RBS <- rep(NA,dim(df_ngs)[1]) #
        df_ngs$Peptide <- rep(NA,dim(df_ngs)[1]) #
#
#
        df_ngs$RBS[which(df_ngs$Leader %in% c(1,5,9,13:22))] <- 'WT'#
        df_ngs$RBS[which(df_ngs$Leader %in% c(2,6,10,23:32))] <- 'BB0030'#
        df_ngs$RBS[which(df_ngs$Leader %in% c(3,7,11,33:42))] <- 'BB0032'#
        df_ngs$RBS[which(df_ngs$Leader %in% c(4,8,12,43:52))] <- 'BB0034'#
        df_ngs$RBS <- factor(df_ngs$RBS, #
            rev(c('BB0030','BB0034','BB0032','WT')))#
#
        df_ngs$Peptide <- (as.integer(df_ngs$Leader) -3) %% 10 #
        df_ngs$Peptide[which(df_ngs$Leader %in% c(1:4))] <- 'WT'#
        df_ngs$Peptide[which(df_ngs$Leader %in% c(5:8))] <- 'Min Rare'#
        df_ngs$Peptide[which(df_ngs$Leader %in% c(9:12))] <- 'Max Rare'#
#
        df_ngs$Peptide <- factor(ngs_avg_clean$Peptide, #
            rev(c('WT','Min Rare','Max Rare',0:9)), #
            rev(c('WT','Min Rare','Max Rare',paste('∆G',c(1:10),sep=' '))))#
    }#
    #
    return(df_ngs)#
}
df_ngs <- load_ustats203(min10_203)
min10_203 <- df_ngs
min_10_203[1:10,]
min10_203[1:10,]
 df_ngs$Peptide <- (as.integer(df_ngs$Leader) -3) %% 10
min10_203[1:10,]
df_ngs$Peptide <- (as.integer(df_ngs$Leader) -3) %% 10
df_ngs[1:10,]
        df_ngs$Peptide[which(df_ngs$Leader %in% c(1:4))] <- 'WT'#
        df_ngs$Peptide[which(df_ngs$Leader %in% c(5:8))] <- 'Min Rare'#
        df_ngs$Peptide[which(df_ngs$Leader %in% c(9:12))] <- 'Max Rare'
df_ngs[1:10,]
        df_ngs$Peptide <- factor(df_ngs$Peptide, #
            rev(c('WT','Min Rare','Max Rare',0:9)), #
            rev(c('WT','Min Rare','Max Rare',paste('∆G',c(1:10),sep=' '))))
min10_203 <- df_ngs
df_ngs[1:10,]
min10_203[1:10,]
ngs_202h[1:12,]
ngs_202[1:12,]
ngs_202h  <- load_ustats202(min10_202, perfect_only= TRUE)
#
load_ustats202 <- function(ustats_file, perfect_only= TRUE, n_reads= 10) {#
    df_ngs <- load_ustats(ustats_file)#
    #
    if (perfect_only) { #
        df_ngs <- subset(df_ngs, #
            (counts > n_reads & lev == 0 & !(is.na(df_ngs$target))))#
    }#
    #
    #split target into promoter and rbs#
    sp = strsplit(as.character(df_ngs$target), '--')#
    df_ngs$Promoter <- sapply(sp, "[", 1)#
    df_ngs$RBS <- sapply(sp, "[", 2)#
    #
    return(df_ngs)#
}
ngs_202h  <- load_ustats202(min10_202, perfect_only= TRUE)
ngs_202h[1:12,]
ngs_202h$adj_score  <- get_new_scores(ngs_202, bin_pcts202, bin_breaks)
ngs_202h$adj_score <- get_new_scores(ngs_202h, bin_pcts202, bin_breaks)
ngs_202h$adj_score[1:12]
ngs_202h[1:12,c('score','adj_score')]
csv_dir    <- '/Users/dbgoodman/Dropbox/ecre/ngs/'#
min10_202  <- paste(csv_dir,'202_hiseq/202_hiseq_min10.ustats', sep='')#
min10_203  <- paste(csv_dir,'203_hiseq/203_hiseq_min10.ustats', sep='')#
min2_202m  <- '/Users/dbgoodman/Dropbox/ecre/ngs/202_bins/202_bins.ustats'
ngs_203h  <- load_ustats203(min10_203, perfect_only= TRUE)
ngs_202m <- load_ustats202(min2_202m, perfect_only= TRUE)
ngs_203h$adj_score <- get_new_scores(ngs_203h, bin_pcts203, bin_breaks)#
ngs_202m$adj_score <- get_new_scores(ngs_202m, bin_pcts202, bin_breaks)
ngs_202m[1:12,c('score','adj_score')]
ngs_202h$RBS <- reorder(ngs_202h$RBS, #
    ngs_avg_clean$adj_score, median)#
ngs_202h$Promoter <- reorder(ngs_202h$Promoter, #
    ngs_avg_clean$adj_score, median)
ngs_202h$RBS <- reorder(ngs_202h$RBS, #
    ngs_202h$adj_score, median)#
ngs_202h$Promoter <- reorder(ngs_202h$Promoter, #
    ngs_202h$adj_score, median)
ggplot(ngs_avg_clean, aes(x = RBS, y = Promoter)) + #
    geom_tile(aes(fill = rescale( log10(adj_score), c(-1, 1) ))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         legend.position = "none",axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen")
ngs_202h$adj_score <- get_new_scores(ngs_202h, bin_pcts202, bin_breaks)
ngs_202h$RBS <- reorder(ngs_202h$RBS, #
    ngs_202h$adj_score, median)#
ngs_202h$Promoter <- reorder(ngs_202h$Promoter, #
    ngs_202h$adj_score, median)#
#
logbreaks = c(250,500,1000,2000,4000,8000,16000,32000,64000,128000,256000)#
#
ggplot(ngs_202h, aes(x = RBS, y = Promoter)) + #
    geom_tile(aes(fill = rescale( log10(adj_score), c(-1, 1) ))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         legend.position = "none",axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen")
ggplot(ngs_202h, aes(x = RBS, y = Promoter)) + #
    geom_tile(aes(fill = log(adj_score))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         legend.position = "none",axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen",#
        midpoint=log(14019), limits=c(log(1), log(256000)), #
        breaks=log((bin_breaks[2:length(bin_breaks)] - #
            bin_breaks[1:length(bin_breaks)-1]) / 2 + #
            bin_breaks[1:length(bin_breaks)-1]),#
        labels=bin_breaks[2:length(bin_breaks)]) +#
    opts(title="Promoter vs. RBS Translation Levels") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold"))
min(ngs_202h$adj_score)
max(ngs_202h$adj_score)
ggplot(ngs_202h, aes(x = RBS, y = Promoter)) + #
    geom_tile(aes(fill = log(adj_score))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen",#
        midpoint=log(14019), limits=c(log(800), log(206121.5)), #
        breaks=log((bin_breaks[2:length(bin_breaks)] - #
            bin_breaks[1:length(bin_breaks)-1]) / 2 + #
            bin_breaks[1:length(bin_breaks)-1]),#
        labels=bin_breaks[2:length(bin_breaks)]) +#
    opts(title="Promoter vs. RBS Translation Levels") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold"))
bin_mids <- log((bin_breaks[2:length(bin_breaks)] - #
    bin_breaks[1:length(bin_breaks)-1]) / 2 + #
    bin_breaks[1:length(bin_breaks)-1])
paste('Bin ', c(1:12), ' (', bin_mids, ')',sep='')
bin_mids <- bin_breaks[2:length(bin_breaks)] - #
    bin_breaks[1:length(bin_breaks)-1]) / 2 + #
    bin_breaks[1:length(bin_breaks)-1]
paste('Bin ', c(1:12), ' (', bin_mids, ')',sep='')
bin_mids <- (bin_breaks[2:length(bin_breaks)] - #
    bin_breaks[1:length(bin_breaks)-1]) / 2 + #
    bin_breaks[1:length(bin_breaks)-1]
paste('Bin ', c(1:12), ' (', bin_mids, ')',sep='')
paste('Bin ', c(1:12), ' (', signif(bin_mids,3), ')',sep='')
ggplot(ngs_202h, aes(x = RBS, y = Promoter)) + #
    geom_tile(aes(fill = log(adj_score))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen",#
        name='Mid-bin Values\n(Max: 255,000)'#
        midpoint=log(bin_breaks[7]), #
        limits=c(log(bin_mids[1]), log(bin_mids[12])), #
        breaks=log(bin_mids),#
        labels=bin_labels) +#
    opts(title="Promoter vs. RBS Translation Levels") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold"))
ggplot(ngs_202h, aes(x = RBS, y = Promoter)) + #
    geom_tile(aes(fill = log(adj_score))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen",#
        name='Mid-bin Values\n(Max: 255,000)',#
        midpoint=log(bin_breaks[7]), #
        limits=c(log(bin_mids[1]), log(bin_mids[12])), #
        breaks=log(bin_mids),#
        labels=bin_labels) +#
    opts(title="Promoter vs. RBS Translation Levels") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold"))
bin_labels <- paste('Bin ', c(1:12), ' (', signif(bin_mids,3), ')',sep='')
ggplot(ngs_202h, aes(x = RBS, y = Promoter)) + #
    geom_tile(aes(fill = log(adj_score))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen",#
        name='Mid-bin Values\n(Max: 255,000)',#
        midpoint=log(bin_breaks[7]), #
        limits=c(log(bin_mids[1]), log(bin_mids[12])), #
        breaks=log(bin_mids),#
        labels=bin_labels) +#
    opts(title="Promoter vs. RBS Translation Levels") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold"))
library(reshape2)#
library(plotrix)#
library(grid)#
library(plyr)#
library(ggplot2)#
#
load_ustats <- function(ustats_file) {#
	df_ngs <- as.data.frame(read.csv(ustats_file,header=TRUE,sep='\t'))#
	df_ngs$lev <- df_ngs$mismatch + df_ngs$ins + df_ngs$del#
	#
    #factorize lev distances#
    df_ngs$lev_f <- factor((as.integer(df_ngs$lev > 0) + #
        as.integer(df_ngs$lev > 1) + as.integer(df_ngs$lev > 5)#
        + as.integer(df_ngs$lev > 10)), c(0:5),#
        labels=c('perfect','single','near','distant','v.distant','no match'),#
        exclude=NULL, ordered = TRUE)#
    return(df_ngs)#
}#
#
load_ustats202 <- function(ustats_file, perfect_only= TRUE, n_reads= 10) {#
    df_ngs <- load_ustats(ustats_file)#
    #
    if (perfect_only) { #
        df_ngs <- subset(df_ngs, #
            (counts > n_reads & lev == 0 & !(is.na(df_ngs$target))))#
    }#
    #
    #split target into promoter and rbs#
    sp = strsplit(as.character(df_ngs$target), '--')#
    df_ngs$Promoter <- sapply(sp, "[", 1)#
    df_ngs$RBS <- sapply(sp, "[", 2)#
    #
    return(df_ngs)#
}#
#
load_ustats203 <- function(ustats_file, perfect_only= TRUE, n_reads= 10,#
        controls= FALSE) {#
    df_ngs <- load_ustats(ustats_file)#
    #
    if (perfect_only) { #
        df_ngs <-subset(df_ngs, #
            (counts >= n_reads & lev == 0 & !(is.na(df_ngs$target))))#
     }#
    #
    if (controls) {#
        #split target into promoter and rbs#
        sp = strsplit(as.character(ngs_avg$target), '--')#
        #
        df_ngs$Promoter <- sapply(sp, "[", 1)#
        df_ngs$RBS <- sapply(sp, "[", 2)  #
        #
    } else {#
        #split target into Promoter, RBS, Leader#
        sp = strsplit(as.character(df_ngs$target), '-')#
        #
        df_ngs$Promoter <- sapply(sp, "[", 1)#
        df_ngs$RBS <- sapply(sp, "[", 2)#
        df_ngs$Leader <- sapply(sp, "[", 3)#
        df_ngs <- subset(df_ngs, !(df_ngs$RBS == ''))#
    #
        #split Leader into peptide, RBS#
        df_ngs$Gene <- as.factor(df_ngs$RBS)#
        df_ngs$RBS <- rep(NA,dim(df_ngs)[1]) #
        df_ngs$Peptide <- rep(NA,dim(df_ngs)[1]) #
#
#
        df_ngs$RBS[which(df_ngs$Leader %in% c(1,5,9,13:22))] <- 'WT'#
        df_ngs$RBS[which(df_ngs$Leader %in% c(2,6,10,23:32))] <- 'BB0030'#
        df_ngs$RBS[which(df_ngs$Leader %in% c(3,7,11,33:42))] <- 'BB0032'#
        df_ngs$RBS[which(df_ngs$Leader %in% c(4,8,12,43:52))] <- 'BB0034'#
        df_ngs$RBS <- factor(df_ngs$RBS, #
            rev(c('BB0030','BB0034','BB0032','WT')))#
#
        df_ngs$Peptide <- (as.integer(df_ngs$Leader) -3) %% 10 #
        df_ngs$Peptide[which(df_ngs$Leader %in% c(1:4))] <- 'WT'#
        df_ngs$Peptide[which(df_ngs$Leader %in% c(5:8))] <- 'Min Rare'#
        df_ngs$Peptide[which(df_ngs$Leader %in% c(9:12))] <- 'Max Rare'#
#
        df_ngs$Peptide <- factor(df_ngs$Peptide, #
            rev(c('WT','Min Rare','Max Rare',0:9)), #
            rev(c('WT','Min Rare','Max Rare',paste('∆G',c(1:10),sep=' '))))#
    }#
    #
    return(df_ngs)#
}#
#
#-----------------------------------------------------------------------------#
#FILENAMES#
csv_dir    <- '/Users/dbgoodman/Dropbox/ecre/ngs/'#
pdf_dir    <- '/Users/dbgoodman/Dropbox/ecre/ngs/plots/'#
#
min10_202  <- paste(csv_dir,'202_hiseq/202_hiseq_min10.ustats', sep='')#
min10_203  <- paste(csv_dir,'203_hiseq/203_hiseq_min10.ustats', sep='')#
min2_202m  <- '/Users/dbgoodman/Dropbox/ecre/ngs/202_bins/202_bins.ustats'#
#
#LOAD 202, 203, MISEQ#
ngs_202h  <- load_ustats202(min10_202, perfect_only= TRUE)#
ngs_203h  <- load_ustats203(min10_203, perfect_only= TRUE)#
ngs_202m <- load_ustats202(min2_202m, perfect_only= TRUE)#
#
#-----------------------------------------------------------------------------#
get_new_scores <- function(ngs_df, bin_pcts, bin_breaks) {#
    bin_sums <-colSums(ngs_df[,paste('bin',c(1:12),sep='.')])#
    bin_means <- (bin_breaks[2:length(bin_breaks)] - #
        bin_breaks[1:length(bin_breaks)-1]) / 2 + #
        bin_breaks[1:length(bin_breaks)-1]#
    read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums#
    contrib_per_bin <- t(t(read_pcts) / colSums(read_pcts))#
    return( exp( colSums(contrib_per_bin * log(bin_means) ) ) )#
}#
#
get_adj_bins <- function(ngs_df, bin_pcts, bin_breaks) {#
    bin_sums <-colSums(ngs_df[,paste('bin',c(1:12),sep='.')])#
    bin_means <- (bin_breaks[2:length(bin_breaks)] - #
        bin_breaks[1:length(bin_breaks)-1]) / 2 + #
        bin_breaks[1:length(bin_breaks)-1]#
    read_pcts <- t(ngs_df[,paste('bin',c(1:12),sep='.')]) / bin_sums#
    contrib_per_bin <- t(t(read_pcts) / colSums(read_pcts))#
    return(contrib_per_bin)#
}#
#
#-----------------------------------------------------------------------------#
#UPDATE SCORES#
bin_pcts202 <- c(22.3, 5.466666667, 7.533333333, 8.566666667, 8.4, #
    8.133333333, 7.766666667, 7.433333333, 6.966666667, 6.066666667, #
    4.733333333, 6.533333333)#
bin_pcts203 <- c(37.93333333, 9.266666667, 10.86666667, 10.16666667, #
    7.666666667, 5.8, 4.533333333, 3.566666667, 2.833333333, 2.266666667, #
    1.733333333, 3.2)#
bin_breaks <- c(0,1250, 2027, 3287, 5331, 8645, 14019, 22735, 36870, #
    59791, 96963, 157243, 255000)#
bin_mids <- (bin_breaks[2:length(bin_breaks)] - #
    bin_breaks[1:length(bin_breaks)-1]) / 2 + #
    bin_breaks[1:length(bin_breaks)-1]#
bin_labels <- paste('Bin ', c(1:12), ' (', signif(bin_mids,3), ')',sep='')#
#
#LOAD 202, 203, MISEQ#
ngs_202h$adj_score <- get_new_scores(ngs_202h, bin_pcts202, bin_breaks)#
ngs_203h$adj_score <- get_new_scores(ngs_203h, bin_pcts203, bin_breaks)#
ngs_202m$adj_score <- get_new_scores(ngs_202m, bin_pcts202, bin_breaks)#
#
#get relative scores for 203#
get_wt_score <- function (i) {#
    wt_score <- ngs_203h$adj_score[#
        ngs_203h$Gene == ngs_203h$Gene[i] & #
        ngs_203h$Promoter == ngs_203h$Promoter[i] & #
        ngs_203h$RBS == ngs_203h$RBS[i] & #
        ngs_203h$Peptide == 'WT']#
    ifelse(length(wt_score) > 0, wt_score, NA)#
}#
#
ngs_203h$wt_score <-vapply(c(1:dim(ngs_203h)[1]),get_wt_score, 0)#
ngs_203h$rel_score <- log10(ngs_203h$adj_score / ngs_203h$wt_score)#
#
#-----------------------------------------------------------------------------#
#PLOT 202 GRID#
ngs_202h$RBS <- reorder(ngs_202h$RBS, #
    ngs_202h$adj_score, median)#
ngs_202h$Promoter <- reorder(ngs_202h$Promoter, #
    ngs_202h$adj_score, median)#
#
ggplot(ngs_202h, aes(x = RBS, y = Promoter)) + #
    geom_tile(aes(fill = log(adj_score))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
         axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen",#
        name='Mid-bin Values\n(Max: 255,000)',#
        midpoint=log(bin_breaks[7]), #
        limits=c(log(bin_mids[1]), log(bin_mids[12])), #
        breaks=log(bin_mids),#
        labels=bin_labels) +#
    opts(title="Library A Translation Levels") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold")) #
    #
ggsave(paste(pdf_dir,"202_hiseq-FIXED-abs_grid.pdf", sep=''),#
    width=10,height=10)#
    #
#-----------------------------------------------------------------------------#
#PLOT 203 GRIDS#
ngs_203h$Gene <- reorder(ngs_203h$Gene, #
    ngs_203h$adj_score, median)#
    #
ggplot(ngs_203h, aes(x = Gene, y = Peptide)) + #
    geom_tile(aes(fill = log(adj_score))) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
        axis.ticks = theme_blank()) +#
    scale_fill_gradient2(low="darkred", mid="yellow", high="darkgreen",#
        name='Mid-bin Values\n(Max: 255,000)',#
        midpoint=log(bin_breaks[7]), #
        limits=c(log(bin_mids[1]), log(bin_mids[12])), #
        breaks=log(bin_mids),#
        labels=bin_labels) +#
    facet_grid(RBS ~ Promoter) +#
    opts(title="Library B Translation Levels") + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold")) #
    #
ggsave(paste(pdf_dir,"203_hiseq-FIXED-abs_grid.pdf", sep=''),#
    width=30,height=10)#
#
ggplot(ngs_203h, aes(x = Gene, y = Peptide)) + #
    geom_tile(aes(fill = rel_score)) + #
    GridThemeX90() + #
    opts(panel.background = theme_rect(fill = "gray80"),#
        axis.ticks = theme_blank()) +#
    scale_fill_gradient2(#
        name='Fold Expression Change\n vs. WT Peptide',#
        low="darkred", mid="yellow", high="darkgreen", #
        midpoint=0, limits=c(-2,+2), breaks=c(-2,-1,0,1,2), #
        labels=c('0.01x','0.1x','1x','10x','100x')) +#
    facet_grid(RBS ~ Promoter) + #
    opts(title=paste("Fold Expression Relative To WT Peptide for\n",#
        "Same Gene,Promoter,RBS")) + #
    opts(plot.title = theme_text(size=14, lineheight=.8, face="bold")) #
#
ggsave(paste(pdf_dir,"203_hiseq-FIXED-rel_grid.pdf", sep=''),#
    width=30,height=10)
?nlm
dir()
ls()
setwd('/Users/dbgoodman/Dropbox/chiptools/receq')#
snpdf <- as.data.frame(read.csv('all_snp_data.csv', header=TRUE, row.names=1))#
snpdf$VAR <- as.logical(snpdf$VAR)#
snpdf$HET <- as.logical(snpdf$HET)#
snpdf$AMBER <- as.logical(snpdf$AMBER)#
snpdf$STRAIN <- as.character(snpdf$STRAIN)#
snpdf$STRAIN_NUM <- as.numeric(snpdf$STRAIN_NUM)
snpdf
snpdf$GENE
names(snpdf)
snpdf$EFF_GENE
'lacZ' %in% snpdf$EFF_GENE
1:dim(snpdf)[1] %in% grep(snpdf$EFF_GENE,'lacZ', fixed=TRUE)
?grep
1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE)
which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE))
snpdf$STRAIN[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE))]
cbind(c(snpdf$STRAIN[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE)), snpdf$POS[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE))]
)
cbind(c(snpdf$STRAIN[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE)), snpdf$POS[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE)))
cbind(c(snpdf$STRAIN[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE)), snpdf$POS[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE))))
?cbind
cbind(snpdf$STRAIN[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE))], snpdf$POS[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE)])
cbind(snpdf$STRAIN[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE))], snpdf$POS[which(1:dim(snpdf)[1] %in% grep('lacZ',snpdf$EFF_GENE, fixed=TRUE))])
snpdf$POS == 35504
snpdf[snpdf$POS == 35504]
snpdf[snpdf$POS == 365504]
snpdf[snpdf$POS == '365504']
snpdf[snpdf$POS == 365504]
snpdf[snpdf$POS == 365504,]
snpdf[snpdf$POS == 365504,]
snpdf[snpdf$POS > 4224807 && snpdf$POS < 4245922,]
snpdf[snpdf$POS > 4224000 && snpdf$POS < 4246000,]
snpdf[snpdf$POS > 4224000,]
snpdf[snpdf$POS > 4224000,]$POS
snpdf[snpdf$POS > 4244807 & snpdf$POS < 4245922,]
names(snpdf)
snodf$CALL[5]
snpdf$CALL[5]
snpdf$CALL[6]
